version: '3.8'

services:
  db:
    image: "postgres:13"
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=luhack_vm_service
    ports:
      - 127.0.0.1:6432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  site:
    image: ghcr.io/simmsb/luhack-vm-service:latest
    restart: always
    privileged: true
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      - PORT=4000
      - DATABASE_URL=postgres://postgres:postgres@localhost:6432/luhack_vm_service
    volumes:
      - $LUHACK_IMAGE_DIR:$LUHACK_IMAGE_DIR # instances:/instances
      - $LUHACK_XML_FILE:$LUHACK_XML_FILE # :/data/kali_luhack.xml
      - $LUHACK_BASE_IMAGE:$LUHACK_BASE_IMAGE # /data/kali_luhack.qcow2
      - /var/run/libvirt/libvirt-sock:/var/run/libvirt/libvirt-sock
    network_mode: host
    command: /bin/sh -c '/app/bin/migrate && /app/bin/server'
    labels:
      caddy: $DOMAIN_NAME
      caddy.reverse_proxy: "127.0.0.1:4000"

  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /run/tailscale/tailscaled.sock:/run/tailscale/tailscaled.sock
      - caddy_data:/data
    network_mode: host
    restart: unless-stopped

volumes:
  db_data:
